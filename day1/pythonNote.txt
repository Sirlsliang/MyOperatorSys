1、
  在python中如果使用python解释器来编程，如果从解释器退出再进入，那么定义的所有方法和变量都会消失。
  为此python提供了一个办法，把这些定义存放在文件中，为一些脚本或者交互式的解释器实例使用，这个文件被称为—— 模块。

2、主流的解析模块
  Htmllib(sgmllib):模块比较古老，只能简单的解析
  BeautifulSoup   :专业的html解析模块
  Selenium        :自动化web测试方案解决者，自带JS解析器，可以配合浏览器做动态网页的爬取、分析、挖掘
  Scrapy          :专业的爬虫框架（单机）

3、python中类的声明和继承、以及它们的方法的书写规则
    eg： class handle_html(sgmllib.SGMLParser)：
          #方法：前面带有#号的是注释
          def unknown_starttag(self,tag,attrs):
            #异常捕捉
            try:
              XXXXX
            except:
              pass

          
4、BeautifulSoup 有5种解析器，每种解析器可以自动选择或者手动指定，每个解析器的侧重方向不一样

  解析器           使用方法                             优势                      劣势
------------------------------------------------------------------------------------------------------------------------
Python标准库       BeautifulSoup(markup,"html'parser")  +Python内置的标准库      +Python2.7.3 or 3.2.2前的版本中文档容错能力差
                                                        +执行速度适中
                                                        +文档容错能力强
------------------------------------------------------------------------------------------------------------------------
lxml HTML 解析器   BeautifulSoup(markup,"lxml")         +速度快                  +需要安装C语言库
                                                        +文档容错能力强
------------------------------------------------------------------------------------------------------------------------
lxml XML 解析器    BeautifulSoup(markup,["lxml","xml"]) +速度快                  +需要安装C语言库
                   BeautifulSoup(markup,"xml)           +唯一支持XML的解析器 
------------------------------------------------------------------------------------------------------------------------
html5lib           BeautifulSoup(markup,"html5lib")     +最好的容错性            +速度慢
                                                        +以浏览器的方式解析文档  +不依赖外部扩展
                                                        +生成HTML5格式的文档  
------------------------------------------------------------------------------------------------------------------------
5、
  urlparse方法：python3中在urllib包下的parse模块当中,返回值为元组的子类
  url的基本组成结构：scheme://netloc/path;params?query#fragment

Attribute   Index     Value                    Value if not present
-----------------------------------------------------------------------------------
scheme       0        URL scheme specifier     Scheme Parameter 
                      (协议)                  
-----------------------------------------------------------------------------------
netloc       1        Network location part    empty string
                      (必须以//开头才可以获
                       该值，否则该值被划分到
                       path中)
-----------------------------------------------------------------------------------
path         2        Hierachical path         empty string
-----------------------------------------------------------------------------------
params       3        Parameters for last path empty string
                      element           
-----------------------------------------------------------------------------------
query        4        Query component          empty string
-----------------------------------------------------------------------------------
fragment     5        Fragment identifier      empty string
-----------------------------------------------------------------------------------
username              Username                 None
-----------------------------------------------------------------------------------
password              Password                 None
-----------------------------------------------------------------------------------
hostname              Host name(lower case)    None
-----------------------------------------------------------------------------------
port                  Port number as integer   None
                      if present
-----------------------------------------------------------------------------------
6、
  python 中的元组：turple
  元组和列表类似,元组由不同的元素组成，每个元素可以存储不同类型的数据，例如，字符串
数字和元组
  +任意对象的有序集合，数组类似
  +通过偏移读取
  +一旦生成，不可改变**
  +固定长度，支持嵌套
  元组创建：tuple_name=(,)
  元祖的访问：
    1、下标索引从0开始，可以进行截取、组合
    2、元组中的元素值是不允许修改的，例如：tup1[0]=100;是非法的
    3、元组支持“+”和“*”运算
    4、元组支持索引和截取
    5、内置函数有比较、计算元组个数、返回元组中最大值、将列表转换为元组
  
7、
  Python中的列表：list
  +任意对象的有序集合
  +可通过偏移存取，列表中级的元素是可变的
  +长度可变，支持嵌套
  列表创建：
    list__name=[]
8、
  Python中的集合set
  +不重复对象的无序集合
  +不可以通过索引读取
  集合：
    set_name =set([])；必须指定set
9、
  Python中的字典:dic
  +key value 的形式
  +key  是无序的
  +key 和value可以是任意对象
  +长度可变，任意嵌套

